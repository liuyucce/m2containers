version: '2'

services:
### Workspace Utilities Container ###########################
  workspace:
    extends:
      file: ../../common/docker-compose.yml
      service: workspace
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./config/workspace/ext-xdebug.ini:/etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini
      - ./config/workspace/ext-tideways_xhprof.ini:/etc/php/${PHP_VERSION}/cli/conf.d/tideways_xhprof.ini
      - ../../common/xhgui:${XHGUI_CODE_PATH_CONTAINER}
      - ../../common/config/varnish/health_check.php:${DEFAULT_PATH}/health_check.php
      - ./volumes/shared:/mnt/web
      - ./volumes/composer:/home/www/.composer
      - ./volumes/ssh:/home/laradock/.ssh

### PHP-FPM Container #######################################
  php-fpm:
    extends:
      file: ../../common/docker-compose.yml
      service: php-fpm
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./config/php-fpm/ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./config/php-fpm/ext-tideways_xhprof.ini:/usr/local/etc/php/conf.d/tideways_xhprof.ini
      - ../../common/xhgui:${XHGUI_CODE_PATH_CONTAINER}
      - ../../common/config/varnish/health_check.php:${DEFAULT_PATH}/health_check.php
      - ./config/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./volumes/shared:/mnt/web
      - ./volumes/composer:/home/www/.composer

### SSL ##################################
  ssl:
    extends:
      file: ../../common/docker-compose.yml
      service: ssl
    volumes:
      - ./ssl/certs:/certs

### Nginx Server Container ##################################
  nginx:
    extends:
      file: ../../common/docker-compose.yml
      service: nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      - ../../common/xhgui:${XHGUI_CODE_PATH_CONTAINER}
      - ../../common/config/varnish/health_check.php:${DEFAULT_PATH}/health_check.php
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_CONF_M2_PATH}:/etc/nginx/conf_m2
    depends_on:
      - php-fpm
      - ssl

### Apache Server ########################################
#  apache2:
#    volumes:
#      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
#      - ./xhgui:${XHGUI_CODE_PATH_CONTAINER}
#      - ./varnish/health_check.php:${DEFAULT_PATH}/health_check.php
#      - ${APACHE_HOST_LOG_PATH}:/var/log/apache2
#      - ${APACHE_SITES_PATH}:/etc/apache2/sites-available
#    depends_on:
#      - php-fpm

### Varnish ##########################################
  varnish:
    extends:
      file: ../../common/docker-compose.yml
      service: varnish
    depends_on:
      - php-fpm

#### Postfix Server Container ################################
  postfix:
    extends:
      file: ../../common/docker-compose.yml
      service: postfix
    volumes:
      - ./postfix/Maildir:/root/Maildir

### Redis Container #########################################
  redis:
    extends:
      file: ../../common/docker-compose.yml
      service: redis
#    volumes:
#      - ${DATA_PATH_HOST}/redis:/data

### RabbitMQ #############################################
  rabbitmq:
    extends:
      file: ../../common/docker-compose.yml
      service: rabbitmq
#    volumes:
#      - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq
    depends_on:
      - php-fpm

### MongoDB ##############################################
  mongo:
    extends:
      file: ../../common/docker-compose.yml
      service: mongo
#    volumes:
#      - ${DATA_PATH_HOST}/mongo:/data/db

### ElasticSearch ########################################
  elasticsearch:
    build:
      context: ./config/elasticsearch
      args:
        - ELK_VERSION=${ELK_VERSION}
        - INSTALL_PHONETIC=${ELASTICSEARCH_INSTALL_PHONETIC}
        - INSTALL_ICU=${ELASTICSEARCH_INSTALL_ICU}
    environment:
      - cluster.name=laradock-cluster
      - node.name=laradock-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - cluster.initial_master_nodes=laradock-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    volumes:
#      - ${DATA_PATH_HOST}/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"


### Kibana ##############################################
  kibana:
    build:
      context: ./config/kibana
      args:
        - ELK_VERSION=${ELK_VERSION}
    ports:
      - "${KIBANA_HTTP_PORT}:5601"
    depends_on:
      - elasticsearch

### Logrotate Container ####################################
  logrotate:
    extends:
      file: ../../common/docker-compose.yml
      service: logrotate
    volumes:
      - ./config/logrotate/logrotate.conf:/etc/logrotate.conf
      - ./volumes/shared/log:/log

### Mailhog Container #####################################
  mailhog:
    extends:
      file: ../../common/docker-compose.yml
      service: mailhog
    volumes:
      - ./volumes/email:/mnt/storage
    environment:
      - MH_STORAGE=${MAILHOG_MH_STORAGE}
      - MH_MAILDIR_PATH=${MAILHOG_MH_MAILDIR_PATH}
