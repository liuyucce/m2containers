version: '2'

services:
### Workspace Utilities Container ###########################
  workspace:
    extends:
      file: ../../common/docker-compose.yml
      service: workspace
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./config/workspace/ext-xdebug.ini:/etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini
      - ./config/workspace/xdebug.ini:/etc/php/${PHP_VERSION}/cli/conf.d/xdebug.ini
      - ./config/workspace/ext-xhprof.ini:/etc/php/${PHP_VERSION}/cli/conf.d/xhprof.ini
      - ./volumes/shared/log/magento/:/var/www/app/var/log
      - ./volumes/composer:/home/laradock/.composer
      - ./volumes/ssh:/home/laradock/.ssh
    extra_hosts:
      - "host.docker.internal:${DOCKER_HOST_IP}"

### PHP-FPM Container #######################################
  php-fpm:
    extends:
      file: ../../common/docker-compose.yml
      service: php-fpm
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./config/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ./config/php-fpm/ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./config/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./config/php-fpm/ext-xhprof.ini:/usr/local/etc/php/conf.d/xhprof.ini
      - ../../common/config/varnish/health_check.php:${DEFAULT_PATH}/health_check.php
      - ./volumes/shared/log/magento/:/var/www/app/var/log
    extra_hosts:
      - "host.docker.internal:${DOCKER_HOST_IP}"

### XHGUI Container #######################################
  xhgui:
    extends:
      file: ../../common/docker-compose.yml
      service: xhgui
    volumes:
      - ../../common/xhgui:${XHGUI_CODE_PATH_CONTAINER}
    extra_hosts:
      - "host.docker.internal:${DOCKER_HOST_IP}"

### SSL ##################################
  ssl:
    extends:
      file: ../../common/docker-compose.yml
      service: ssl
    volumes:
      - ./volumes/ssl/certs:/certs

### Nginx Server Container ##################################
  nginx:
    extends:
      file: ../../common/docker-compose.yml
      service: nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER} # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ../../common/xhgui:${XHGUI_CODE_PATH_CONTAINER}
      - ../../common/config/varnish/health_check.php:${DEFAULT_PATH}/health_check.php
      - ./config/nginx/sites/:/etc/nginx/sites-available
      - ./config/nginx/conf_m2/:/etc/nginx/conf_m2
      - ./volumes/ssl/certs/:/etc/nginx/ssl
      - ./volumes/shared/log/nginx/:/var/log/nginx
    depends_on:
      - php-fpm
      - ssl

### Varnish ##########################################
  varnish:
    extends:
      file: ../../common/docker-compose.yml
      service: varnish
    depends_on:
      - php-fpm

### Redis Container #########################################
  redis:
    extends:
      file: ../../common/docker-compose.yml
      service: redis
    volumes:
      - ./volumes/redis:/data

#### Postfix Server Container ################################
  postfix:
    extends:
      file: ../../common/docker-compose.yml
      service: postfix
    volumes:
      - ./volumes/postfix/Maildir:/root/Maildir

### Mailhog Container #####################################
  mailhog:
    extends:
      file: ../../common/docker-compose.yml
      service: mailhog
    volumes:
      - ./volumes/email:/mnt/storage

### Opensearch ########################################
  opensearch:
    build:
      context: ./config/opensearch
      args:
        - OPS_VERSION=${OPS_VERSION}
        - INSTALL_PHONETIC=${OPENSEARCH_INSTALL_PHONETIC}
        - INSTALL_ICU=${OPENSEARCH_INSTALL_ICU}
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - ./volumes/opensearch:/usr/share/opensearch/data
    ports:
      - "${OPENSEARCH_HOST_HTTP_PORT}:9200"
      - "${OPENSEARCH_HOST_TRANSPORT_PORT}:9600"

### Opensearch Dashboard ##############################################
  opensearch-dashboards:
    build:
      context: ./config/opensearch-dashboards
      args:
        - OPS_VERSION=${OPS_VERSION}
    ports:
      - "${OPENSEARCH_DASHBOARDS_HTTP_PORT}:5601"
    depends_on:
      - opensearch

### RabbitMQ #############################################
  rabbitmq:
    extends:
      file: ../../common/docker-compose.yml
      service: rabbitmq
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    depends_on:
      - php-fpm

### MongoDB ##############################################
  mongo:
    extends:
      file: ../../common/docker-compose.yml
      service: mongo
    volumes:
      - ./volumes/mongo:/data/db

### Logrotate Container ####################################
  logrotate:
    extends:
      file: ../../common/docker-compose.yml
      service: logrotate
    volumes:
      - ./config/logrotate/logrotate.conf:/etc/logrotate.conf
      - ./volumes/shared/log:/log

