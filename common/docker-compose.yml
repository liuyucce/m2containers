version: '2'

services:
### Workspace Utilities Container ###########################
  workspace:
    build:
      context: ./config/workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}
        - SHELL_OH_MY_ZSH_AUTOSUGESTIONS=${SHELL_OH_MY_ZSH_AUTOSUGESTIONS}
        - SHELL_OH_MY_ZSH_ALIASES=${SHELL_OH_MY_ZSH_ALIASES}
        - COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - INSTALL_MSMTP=${WORKSPACE_INSTALL_MSMTP}
        - EMAIL_SERVICE_URL=${EMAIL_SERVICE_URL}
        - MSMTP_DOMAIN=${POSTFIX_DOMAIN}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}
        - INSTALL_PNPM=${WORKSPACE_INSTALL_PNPM}
        - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
        - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
    environment:
      - REMOTE_HOST=${DOCKER_REMOTE_HOST}
    tty: true
    ports:
      - "${WORKSPACE_SSH_PORT}:22"

### PHP-FPM Container #######################################
  php-fpm:
    build:
      context: ./config/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_MSMTP=${PHP_FPM_INSTALL_MSMTP}
        - EMAIL_SERVICE_URL=${EMAIL_SERVICE_URL}
        - MSMTP_DOMAIN=${POSTFIX_DOMAIN}
    ports:
      - "${PHP_FPM_SSH_PORT}:22"

### SSL ##################################
  ssl:
    build:
      context: ./config/ssl
    environment:
      - SSL_SUBJECT=${SSL_SUBJECT}
      - SSL_DNS=${SSL_DNS}

### Nginx Server Container ##################################
  nginx:
    build:
      context: ./config/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"

### Varnish ##########################################
  varnish:
    build:
      context: ./config/varnish
      args:
        - INSTALL_GEOIP2=${VARNISH_INSTALL_GEOIP2}
    environment:
      - VARNISH_CONFIG=${VARNISH_CONFIG}
      - CACHE_SIZE=${VARNISH_CACHE_SIZE}
      - VARNISHD_PARAMS=${VARNISHD_PARAMS}
      - VARNISH_PORT=${VARNISH_PORT}
      - BACKEND_HOST=${VARNISH_BACKEND_HOST}
      - BACKEND_PORT=${VARNISH_BACKEND_PORT}
      - PURGE_HOST_WORKSPACE=${VARNISH_PURGE_HOST_WORKSPACE}
      - PURGE_HOST_PHP_FPM=${VARNISH_PURGE_HOST_PHP_FPM}
    ports:
      - "${VARNISH_PORT}:6081"

### Redis Container #########################################
  redis:
    build: ./config/redis
    ports:
      - "${REDIS_PORT}:6379"

#### Postfix Server Container ################################
  postfix:
    build:
      context: ./config/postfix
    environment:
      - SMTP_SERVER=${POSTFIX_SMTP_SERVER}
      - SMTP_USERNAME=${POSTFIX_SMTP_USERNAME}
      - SMTP_PASSWORD=${POSTFIX_SMTP_PASSWORD}
      - SMTP_PORT=${POSTFIX_SMTP_PORT}
      - DOMAIN=${POSTFIX_DOMAIN}
      - SERVER_HOSTNAME=${POSTFIX_HOSTNAMES}
      - MYNETWORKS=${POSTFIX_MYNETWORKS}
      - ENABLE_MAILHOG=${ENABLE_MAILHOG}
    restart: on-failure:5
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "3"
    ports:
      - "${POSTFIX_PORT}:25"

### Mailhog Container #####################################
  mailhog:
    image: mailhog/mailhog:latest
    environment:
      - MH_STORAGE=${MAILHOG_MH_STORAGE}
      - MH_MAILDIR_PATH=${MAILHOG_MH_MAILDIR_PATH}
    restart: on-failure:5
    ports:
      - 8025:8025
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "3"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

### RabbitMQ #############################################
  rabbitmq:
    build: ./config/rabbitmq
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: laradock-rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"

### MongoDB ##############################################
  mongo:
    build: ./config/mongo
    ports:
        - "${MONGODB_PORT}:27017"

### Logrotate Container ####################################
  logrotate:
    image: tutum/logrotate:latest
    restart: on-failure:5
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "3"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

### Networks Setup ############################################
networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
