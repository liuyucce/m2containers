version: '3.1'
services:
### Workspace Utilities Container ###########################
  workspace:
    volumes:
      - applications-sync:${APP_CODE_PATH_CONTAINER}:nocopy # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./xhgui:${XHGUI_CODE_PATH_CONTAINER}:delegated
      - ./varnish/health_check.php:${DEFAULT_PATH}/health_check.php:delegated
      - ~/.ssh:/home/laradock/.ssh:delegated
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    networks:
      - frontend
      - backend

### PHP-FPM Container #######################################
  php-fpm:
    volumes:
      - applications-sync:${APP_CODE_PATH_CONTAINER}:nocopy # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./xhgui:${XHGUI_CODE_PATH_CONTAINER}:delegated
      - ./varnish/health_check.php:${DEFAULT_PATH}/health_check.php:delegated
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini:delegated
    ports:
      - "${PHP_FPM_SSH_PORT}:22"
    networks:
      - backend

### SSL ##################################
  ssl:
    volumes:
      - ./ssl/certs:/certs

### Nginx Server Container ##################################
  nginx:
    volumes:
      - applications-sync:${APP_CODE_PATH_CONTAINER}:nocopy # will be mounted on to the value of APP_CODE_PATH_CONTAINER
      - ./xhgui:${XHGUI_CODE_PATH_CONTAINER}:delegated
      - ./varnish/health_check.php:${DEFAULT_PATH}/health_check.php:delegated
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl:delegated
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx:delegated
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available:delegated
      - ${NGINX_CONF_M2_PATH}:/etc/nginx/conf_m2:delegated
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      - frontend
      - backend

### Apache Server ########################################
#  apache2:
#    volumes:
#      - applications-sync:${APP_CODE_PATH_CONTAINER}:nocopy
#      - ./xhgui:${XHGUI_CODE_PATH_CONTAINER}:delegated
#      - ./varnish/health_check.php:${DEFAULT_PATH}/health_check.php:delegated
#      - ${APACHE_HOST_LOG_PATH}:/var/log/apache2:delegated
#      - ${APACHE_SITES_PATH}:/etc/apache2/sites-available:delegated
#    ports:
#      - "${APACHE_HOST_HTTP_PORT}:80"
#    networks:
#      - frontend
#      - backend

#### Postfix Server Container ################################
  postfix:
    ports:
      - "${POSTFIX_SMTP_PORT}:25"
    volumes:
      - ./postfix/Maildir:/root/Maildir:delegated
    networks:
      - backend

### Redis Container #########################################
  redis:
#    volumes:
#      - ${DATA_PATH_HOST}/redis:/data:delegated
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

### Memcached ############################################
  memcached:
#    volumes:
#      - ${DATA_PATH_HOST}/memcached:/var/lib/memcached:delegated
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    networks:
      - backend

### Percona ################################################
#  percona:
#    volumes:
#      - ${DATA_PATH_HOST}/percona:/var/lib/mysql:delegated
#      - ${PERCONA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d:delegated
#    ports:
#        - "${PERCONA_PORT}:3306"
#    networks:
#      - backend

### RabbitMQ #############################################
  rabbitmq:
#    volumes:
#      - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq:delegated
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    networks:
      - backend

### Varnish ##########################################
  proxy:
    ports:
      - "${VARNISH_PORT}:6081"
    networks:
      - frontend

### Blackfire ########################################
#  blackfire:
#    networks:
#      - backend

### MongoDB ##############################################
  mongo:
#    volumes:
#      - ${DATA_PATH_HOST}/mongo:/data/db:delegated
    ports:
        - "${MONGODB_PORT}:27017"
    networks:
      - backend

### ElasticSearch ########################################
  elasticsearch:
#    volumes:
#      - elasticsearch:/usr/share/elasticsearch/data:delegated
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
    networks:
      - frontend
      - backend

### Kibana ##############################################
  kibana:
    ports:
      - "${KIBANA_HTTP_PORT}:5601"
    networks:
      - frontend
      - backend

### Jenkins ###################################################
  jenkins:
    ports:
      - "${JENKINS_HOST_SLAVE_AGENT_PORT}:50000"
      - "${JENKINS_HOST_HTTP_PORT}:8080"
    volumes:
      - ${JENKINS_HOME}:/var/jenkins_home:delegated
      - /var/run/docker.sock:/var/run/docker.sock:delegated
    networks:
      - frontend
      - backend

volumes:
  applications-sync:
    external:
      name: "${SYNC_NAME}-docker-sync"

### Networks Setup ############################################
networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
