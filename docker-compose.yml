version: '3.1'

### Volumes Setup #############################################
volumes:
#  percona:
#    driver: ${VOLUMES_DRIVER}
#  mongo:
#    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}
#  redis:
#    driver: ${VOLUMES_DRIVER}
#  memcached:
#    driver: ${VOLUMES_DRIVER}

services:
### Workspace Utilities Container ###########################
  workspace:
    build:
      context: ./workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - SSMTP_DOMAIN=${POSTFIX_SSMTP_DOMAIN}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
        - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
        - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
        - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
        - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
        - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
        - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
        - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
        - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
        - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
        - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - INSTALL_TIDEWAYS_XHPROF=${WORKSPACE_INSTALL_TIDEWAYS_XHPROF}
        - INSTALL_SSMTP=${WORKSPACE_INSTALL_SSMTP}
    tty: true

### PHP-FPM Container #######################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
        - SSMTP_DOMAIN=${POSTFIX_SSMTP_DOMAIN}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_TIDEWAYS_XHPROF=${PHP_FPM_INSTALL_TIDEWAYS_XHPROF}
        - INSTALL_SSMTP=${PHP_FPM_INSTALL_SSMTP}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}

### SSL ##################################
  ssl:
    build:
      context: ./ssl
    environment:
      - SSL_SUBJECT=${SSL_SUBJECT}
      - SSL_DNS=${SSL_DNS}

### Nginx Server Container ##################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    depends_on:
      - php-fpm
      - ssl

### Apache Server ########################################
#  apache2:
#    build:
#      context: ./apache2
#      args:
#        - PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}
#        - PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}
#        - PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}
#        - DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}
#    ports:
#      - "${APACHE_HOST_HTTP_PORT}:80"
#      - "${APACHE_HOST_HTTPS_PORT}:443"
#    depends_on:
#      - php-fpm
#
#### Postfix Server Container ################################
  postfix:
    build:
      context: ./postfix
    environment:
      - SMTP_SERVER=
      - SMTP_USERNAME=
      - SMTP_PASSWORD=
      - SMTP_PORT=
      - DOMAIN=${POSTFIX_DOMAIN}
      - SERVER_HOSTNAME=${POSTFIX_HOSTNAMES}
      - MYNETWORKS=${POSTFIX_MYNETWORKS}

### Redis Container #########################################
  redis:
    build: ./redis

### Memcached ############################################
  memcached:
    build: ./memcached

### Percona ################################################
#    percona:
#      build:
#        context: ./percona
#      environment:
#        - MYSQL_DATABASE=${PERCONA_DATABASE}
#        - MYSQL_USER=${PERCONA_USER}
#        - MYSQL_PASSWORD=${PERCONA_PASSWORD}
#        - MYSQL_ROOT_PASSWORD=${PERCONA_ROOT_PASSWORD}
#      ports:
#        - "${PERCONA_PORT}:3306"

### RabbitMQ #############################################
  rabbitmq:
    build: ./rabbitmq
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: laradock-rabbitmq
    depends_on:
      - php-fpm

### Varnish ##########################################
  proxy:
    build:
      context: ./varnish
      args:
        - INSTALL_GEOIP2=${VARNISH_INSTALL_GEOIP2}
    environment:
      - VARNISH_CONFIG=${VARNISH_CONFIG}
      - CACHE_SIZE=${VARNISH_PROXY_CACHE_SIZE}
      - VARNISHD_PARAMS=${VARNISHD_PARAMS}
      - VARNISH_PORT=${VARNISH_PORT}
      - BACKEND_HOST=${VARNISH_PROXY_BACKEND_HOST}
      - BACKEND_PORT=${VARNISH_BACKEND_PORT}
      - VARNISH_SERVER=${VARNISH_PROXY_SERVER}
    depends_on:
#      - apache2
      - nginx

### MongoDB ##############################################
  mongo:
    build: ./mongo

### ElasticSearch ########################################
  elasticsearch:
    build: ./elasticsearch
    environment:
      - cluster.name=laradock-cluster
      - node.name=laradock-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - cluster.initial_master_nodes=laradock-node
    ulimits:
      memlock:
        soft: -1
        hard: -1

### Kibana ##############################################
  kibana:
    build:
      context: ./kibana
      args:
        - ELK_VERSION=${ELK_VERSION}
    depends_on:
      - elasticsearch
